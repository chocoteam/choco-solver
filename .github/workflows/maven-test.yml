# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on: [push, pull_request]

jobs:
  test-solver:
    runs-on: ubuntu-latest
    # Tests matrix
    strategy:
      #fail-fast: false
      matrix:
        group: [ "1s", "10s", "checker", "ibex" ]

    # The different steps
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'maven'
          
      - name: Set up Python 3.10 (for Ibex)
        if: matrix.group == 'ibex'
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      # Install Ibex
      - name: Set up C++11 and install ibex
        if: matrix.group == 'ibex'
        run: |
          sudo apt-get update
          sudo apt-get install -y g++-11
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-11 100
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 100
          sudo update-alternatives --config g++ <<< '1'
          sudo update-alternatives --config gcc <<< '1'
          echo "Using g++ version:"
          g++ --version
          echo "Using venv"
          python3.10 -m venv venv
          source venv/bin/activate
          echo "Python version"
          python --version
          echo "pip show imp"
          python -c "import imp"
          sh scripts/install-ibex.sh

      # Regression tests
      - name: Test ${{ matrix.group }}
        run: mvn -B --file pom.xml package -Pcoverage -DtestFailureIgnore=true -Dgroups=${{ matrix.group }}
  test-parser:
    needs: [ test-solver ]
    runs-on: ubuntu-latest
    # Tests matrix
    strategy:
      #fail-fast: false
      matrix:
        group: [ "xcsp", "dimacs", "mps" ]

    # The different steps
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'maven'

      # Regression tests
      - name: Test ${{ matrix.group }}
        run: mvn -B --file pom.xml package -Pcoverage -DtestFailureIgnore=true -Dgroups=${{ matrix.group }}

      - name: 'Upload XCSP results'
        if: matrix.group == 'xcsp'
        uses: actions/upload-artifact@v3
        with:
          path: ${{ github.workspace }}/parsers/target/xcsp_results.csv

  test-mzn:
    needs: [ test-solver ]
    runs-on: ubuntu-latest
    # Tests matrix
    strategy:
      #fail-fast: false
      matrix:
        group: [ "mzn" ]

    # The different steps
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          #cache: 'maven'

      # Regression tests
      - name: Test ${{ matrix.group }}
        run: mvn -B --file pom.xml package -Pcoverage -DtestFailureIgnore=true -Dgroups=${{ matrix.group }}

      - name: 'Upload MZN results'
        uses: actions/upload-artifact@v3
        with:
          path: ${{ github.workspace }}/parsers/target/mzn_results.csv
