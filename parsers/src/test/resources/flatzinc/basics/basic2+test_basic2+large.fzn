predicate int_le_imp(var int: a,var int: b,var bool: r);
predicate int_lin_le_imp(array [int] of int: as,array [int] of var int: bs,int: c,var bool: r);
array [1..2] of int: X_INTRODUCED_3_ = [-1,1];
array [1..2] of int: X_INTRODUCED_7_ = [1,-1];
var 1..1000: x:: output_var;
var 1..1500: y:: output_var;
var 2..2500: X_INTRODUCED_0_:: is_defined_var;
var bool: X_INTRODUCED_2_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_4_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_5_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_6_ ::var_is_introduced :: is_defined_var;
constraint array_bool_or([X_INTRODUCED_4_,X_INTRODUCED_2_],true);
constraint array_bool_or([X_INTRODUCED_6_,X_INTRODUCED_5_],true);
constraint int_lin_ne(X_INTRODUCED_7_,[x,y],0);
constraint int_lin_eq([1,1,-1],[x,y,X_INTRODUCED_0_],0):: defines_var(X_INTRODUCED_0_);
constraint int_le_imp(500,x,X_INTRODUCED_2_):: defines_var(X_INTRODUCED_2_);
constraint int_lin_le_imp(X_INTRODUCED_3_,[x,y],-1,X_INTRODUCED_4_):: defines_var(X_INTRODUCED_4_);
constraint int_le_imp(y,400,X_INTRODUCED_5_):: defines_var(X_INTRODUCED_5_);
constraint int_le_imp(401,x,X_INTRODUCED_6_):: defines_var(X_INTRODUCED_6_);
solve :: int_search([x,y],input_order,indomain_min,complete) maximize X_INTRODUCED_0_;
