predicate fzn_all_different_int(array [int] of var int: x);
var 1..10: w:: output_var;
var 1..10: x:: output_var;
var 1..10: y:: output_var;
var 1..10: z:: output_var;
var bool: p:: is_defined_var:: output_var;
var bool: q:: is_defined_var:: output_var;
var bool: X_INTRODUCED_0_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_1_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_2_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_3_ ::var_is_introduced :: is_defined_var;
array [1..4] of var int: X_INTRODUCED_4_ ::var_is_introduced  = [w,x,y,z];
constraint fzn_all_different_int(X_INTRODUCED_4_);
constraint array_bool_and([X_INTRODUCED_0_,X_INTRODUCED_1_],p):: defines_var(p);
constraint array_bool_and([X_INTRODUCED_2_,X_INTRODUCED_3_],q):: defines_var(q);
constraint int_le_reif(w,4,X_INTRODUCED_0_):: defines_var(X_INTRODUCED_0_);
constraint int_le_reif(6,x,X_INTRODUCED_1_):: defines_var(X_INTRODUCED_1_);
constraint int_le_reif(y,4,X_INTRODUCED_2_):: defines_var(X_INTRODUCED_2_);
constraint int_le_reif(6,z,X_INTRODUCED_3_):: defines_var(X_INTRODUCED_3_);
solve :: seq_search([seq_search([int_search([w,x],input_order,indomain_min,complete),bool_search([p,q],input_order,indomain_max,complete)]),int_search([y,z],input_order,indomain_max,complete)]) satisfy;
